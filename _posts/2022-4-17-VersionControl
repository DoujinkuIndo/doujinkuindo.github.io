---
layout: post
title: VERSION CONTROL
---

버전 컬트롤(version control)이란?

목표 : 버전컨트롤 방법만

* 프로젝트의 코드와 데이터의 백업입니다.
* 팀 맴버와 프로젝트내 파일 공유를 위한 도구입니다.
* 시간이 지남에 따라 어떻게 진화했는지 확인할 수 있는 타임 머신입니다.   
* QA수단이며 파일 변경 사항을 제출하면 변경 사항을 혹인할 수 있는 귀중한 기회입니다.   
* 컴퓨터에 로컬로 보관하거나 어딘가에 중앙 집중식 서버에 보관할 수 있습니다.   

* 모든 전문 프로젝트는 버전 컨트롤을 사용한다.   
* 모든 아마추어 프로젝트도 버전 컨트롤이 필요합니다.   
* 일회용 코드 외에는 없이 할 생각하면 안됩니다.   

* 버전 컨트롤을 위한 소프트웨어는 많습니다.   
* Git과 Perforce 등 Unreal Engine을 위한 많은 좋은 버전컨트롤이 존재합니다.   


Git overview

기본 용어   

Repository : 저장소를 의미하며, 저장소는 히스토리, 태그, 소스의 가지치기 혹은 branch에 따라 버전을 저장한다. 저장소를 통해 작업자가 변경한 모든 히스토리를 확인 할 수 있다.   
Working Tree : 저장소를 어느 한 시점을 바라보는 작업자의 현재 시점이다.   
Staging Area : 저장소에 커밋하기 전에 커밋을 준비하는 위치이다.
Commit : 현재 변경된 작업 상태를 점검을 마치면 확정하고 저장소에 저장하는 작업이다.   
Head : 현재 작업중인 Branch를 가리키는 것이다.   
Branch : 가지 또는 분기점을 의미하며, 작업을 할때에 현재 상태를 복사하여 Branch에서 작업을 한 후에 완전하다 싶을때 Merge를 하여 작업을 한다.   
Merge : 다른 Branch의 내용을 현재 Branch로 가져와 합치는 작업을 의미한다.   

