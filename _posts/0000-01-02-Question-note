
######################################

######################################

아마존 웹서비스 정책과 역활.

## Identity and Access Management
[계정 루트 사용자](https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_root-user.html)

계정을 처음 생성하는 경우에는 계정의 모든 AWS 서비스 및 리소스에 대한 전체 액세스 권한을 지닌 하나의 자격 증명으로 시작합니다.
이 자격 증명을 AWS 계정 루트 사용자라고 합니다.

* 계정을 생성할 때 사용한 이메일 주소와 암호를 입력하여 루트 사용자로 로그인할 수 있습니다.

* 보안 토큰 서비스 (Security Token Service, STS)를 사용하면
AWS 리소스에 대한 액세스를 제어할 수 있는 임시 보안 자격 증명을 생성하여 신뢰받는 사용자에게 제공할 수 있습니다.
임시 보안 자격 증명은 다음과 같은 차이점을 제외하고는 IAM 사용자가 사용할 수 있는 장기 액세스 키 자격 증명과 거의 동일한 효력을 지닙니다.

## Elastic Container Service
컨테이너를 매우 안전하고, 안정적이고, 학장 가능한 방식으로 실행하는 방법

ECS는 EC2 인스턴스 클러스터에서 Docker 컨테이너를 쉽게 실행, 중지 및 관리할 수 있는 확장성이 뛰어나고 빠른 컨테이너 관리 서비스입니다.

* 클러스터는 서비스 또는 독립 실행형 작업의 논리적 그룹입니다.
* 태스크 정의는 ECS에서 Docker 컨테이너를 실행하는 역활을 합니다.

Cloud tail

https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html

Identity and Access Management(IAM)

보안 토큰 서비스 리지언 설정


######################################

[C++] inline keyword와 inl file. (*.inl)
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=nawoo&logNo=220409027910

inl file에는 inline 함수의 정의부를 적어 놓고, 선언부가 있는 header file의 끝에
#include로 inl file을 포함하여 사용할 수 있습니다.

* Header.h
```cpp
inline void Func();
#include Inline.inl
```
* Inline.inl
```cpp
void Func()
{

}
```

항목형식은 C/C++ 헤더로 되어있어야 합니다.

크기가 비대해지면 사용합니다.

######################################


단, 여기서 주의할 점은 선언과 동시에 정의를 했을 경우 inline keyword를 붙이지 않아도 되지만,
그렇지 않으면 inline keyword를 붙여야 합니다.

세상에 AWS 계정 해킹을 당해보네..

Super, __super차이
https://forums.unrealengine.com/t/calling-super/2491/3
모르겠네잉.

매번 기억안나는 것도 놀랍네.
https://docs.unrealengine.com/4.27/ko/ProgrammingAndScripting/ProgrammingWithCPP/CPPTutorials/Components/1/
컴포넌트 추가하고 붙이기, 정리하도록 합시다.
https://forums.unrealengine.com/t/where-to-use-a-transient-variable/17494
Transient property를 어따쓰는지에 대해서는봐도 모르겠지만,

GetPlayerContext도 있네. 겁나 이름 직관적이네!!

? https://forums.unrealengine.com/t/c-quit-game/39177/5
	FGenericPlatformMisc::RequestExit(true);
    를 이용하여 메인 루프를 종료시킬 수 있다고 하네. 흥미롭네.

? SafeZone은 어디다 사용한다냐?

커스텀 로그 카테고리(Custom Log Category)
언리얼 엔진에서 제공하는 로그 카테고리 이외에 개발자가 필요한 카테고리를 직접 만들어서 사용할 수 있습니다.
* .h
```cpp
DECLARE_LOG_CATEGORY_EXTERN(LogName, Log, ...);
```

* .cpp
```cpp
DEFINE_LOG_CATEGORY(LogName);
```
로 로그를 생성할 수 있습니다.

https://wergia.tistory.com/122 더할 수 있는 내용.


? 완전히 다른내용 같기는 한데 https://techblog.woowahan.com/6460/

? WidgetTree는 뭘 하는 용도라냐

NativeConstruct는 오버라이드 하지않은 Construct와 ...에서 사용됨.

Slot을 캐스팅해서 사용하는데, 누가바도 아닌거 같은데.,, 흠.

텍스트 로컬라이제이션을 보면
https://docs.unrealengine.com/4.27/en-US/ProductionPipelines/Localization/Formatting/
아닌가? 잘못알고 있는 건가? 잘못알고 있는거 같네.

Slot을 캐스팅해서 사용하는 것으로 기억하는데, 이를 어따쓰더라.

C++로 위젯을 생성하기 위해서는 UserWidget을 상속한 클래스를 만들면 된다.
또한 UserWidget을 사용하기 위해서는 UMG모듈의 종속성을 필요로 한다.

계층구조를 C++코드에서 설정하지 않으므로
Blueprint에서 설정합니다.

? 어떻게 c++로 위젯을 생성해서 추가하는지 모르겠음.
https://hombody.tistory.com/316
그래도 모르겠다.
	// 모르겠다.
	//Overlay = WidgetTree->ConstructWidget<UOverlay>(UOverlay::StaticClass(), FName(L"Overlay"));
	
	//SizeBox = CreateWidget<USizeBox, UOverlay>(Overlay, USizeBox::StaticClass(), FName(L"SizeBox"));
	//SizeBox->SetHeightOverride(33.0f);

	//Button = CreateWidget<UButton, UOverlay>(Overlay, UButton::StaticClass(), FName(L"SizeBox"));
	//TextBlock = CreateWidget<UTextBlock, UOverlay>(Overlay, UTextBlock::StaticClass(), FName(L"SizeBox"));

그렇군, 새로운걸 할려고하며 아는게 없으니 작동되지 않는 거구만,
얌전히 블루프린트로 만들자. 자료가 없다는건 그렇게 안쓰닌까 없는건가?
뭐하기전에 일단 읽고하도록 하자,, ㅎㅎ,

음.. WidgetTree를 이용한 오브젝트의 생성은, Initialize에서 호출되어야 합니다.
? 왜요???

! meta = (DisplayName = "MainMenu")

? 안되네, ㅎ. 메서드로 카테고리화 하는건가.

? PanelWidget을 이용해서 위젯을 만들어야 하나봅니다.

? Object is not packaged: Overlay Overlay
세상에 이거는 무슨오류래요?

? UserWidget에 위젯을 추가하라면 WidgetTree를 이용하라는데 WidgetTree가 뭡니까?
이름은 되게 직관적인거 같은데. 무슨 장점이 있답니까?

이득우의 언리얼 c++게임개발의 정석으로 무엇을 만들 수 있는가?
작은것 퀄리티 높게 만들다 보면, 큰 것도 퀄리티 높게 만들 수 있겠지이?

우주정거장
던전보스
나무
공포게임

PVS, GIT, RENDERDOC, VisualAsset,

Material Expression과 DependencyGraph까지는 배우고 싶은데, 토할거 같네. 추가적으로 랜더링 되는 순서도.

MinimalAPI는 MODULENAME_API와 같이 사용될 수 없음. 

? 특정 페서드가 의미가 없을때 의미 없는지 어떻게 파악하나?

? 알파값을 가직 텍스쳐의 압축으로 인해서?? 알파값을 가진 텍스쳐가 저렇게 작동하는 것인가?

? 디폴트 파라메터는 어떻게 구할 수 있을까?

파라메터 설정 전부 안해주면 튕기나 보네,

셰이더에 파라메터 추가하면 껏다 켜야하나?
엔진 생성했을 떄 추가한다고 했으니...
맞네 다시 시작해야하네...

맨처음 배울때는 디버깅부터 배우는 것이 가장 중요한가.

전체적인 그림은 뭐가있는지 파악하고,
스토쿠 풀듯이 하나씩 푸는것이 가장 효율적이다.
알고있는것은 여러개를 동시에 해도 되지만, 모르는 것은 한개씩 풀어야 한다.

쉐이더를 컴파일 할 때에.
Found unbound parameters being used in shadertype FMyTestPS(VertexFactory: ?)
Parameter SrcTexture not bound!
는 쉐이더의 파라메터를 바운드 하지 않았다는 것을 의미함.
5.0.1기준으로 리소스에 바인드 해주면 알아서 생성됨.

SHADER_USE_PARAMETER_STRUCT로 자동으로 해주면 편함.
? 매크로를 어떻게 만들었는지 보는것이 궁금함.

다만 Unbind texture에 대해서 알려주기는 함.

이해하기 어렵네. 
만약에 쉐이더 컴파일할때 오류를 출력하는 거면,
내가 멍청해서 못한거니 앞으로 행동을 수정할 필요 있음.
멍청해서인지 아닌지 아직은 모르겠지만, 일단은 안보임.
픽셀 쉐이더의 시맨틱이 SV_POSITION 하나만 사용할 때는 생략가능함.
하지만 하나 이상이 되면 명시해줘야함.
명시하지 않으면 Fatal error를 발생시킴.

판단하기 전에 읽어보는게 중요한가?

하나씩 아는게 훨씬 더 중요하다? 내 실력을 봐서 모르는게 한개일때만 도전하도록 하자.

안되는 이유는 뭘 모르는지 모르기 때문이다??

새로운거 배울때 하나씩 빼먹는건 당연한건가? 아니면 멍청한건가?

? DECLARE_SHADER_TYPE와 DECLARE_EXPORTED_SHADER_TYPE의 차이는 무엇인가?

다른건 다 필요없고 처음하는건 무조건 튜토리얼로 갑시다.
어떻게 사용되는지 모르면 어떤 래퍼런스가 공부하기 좋은지 알수가 없어요.
1. 개념학습
2. 간단한 코드 분석
3. 개념학습2
4. 튜토리얼 학습
5. 래퍼런스 정독 (래퍼런스가 대부분 영어긴 하지만 영어일 경우 어떻게 대할 것인지 필요)
6. 코드 분석
이 한달간 삽질했던 보완책입니다.
다만 중간중간에 삽질했던 부분(하나를 하기위해서 다른 설정을 필요로 했던 부분)으로 인해 목표가 계속해서 변경되는 점을 어떻게 해결할 수 있을까요?


한번에 하나씩 해야지 여러가 해면 뭐가 오류인지 알 수가 없어요.

UAV, SRV 여전히 어려워요.

추가적으로 알게된 사실이지만, 언리얼 엔진 설치중에 해당 엔진을 이용하는 비쥬얼 스튜디오를 키면 응답오류를 발생합니다.
엔진 커스터마이징 해보고 싶었지만 200GB 넘어가는 것, 컴파일 하는데 하루걸리는 것 보고 지금은 아닌 것 같습니다. 엔진 커스터마이징 하는 방법 기록을 남겨두고 정리합시다.

? 망할 모르는 것을 어떻게 모르는지 아는가?

어리석고 겁이 없어라. 이제 겁을 좀 가지고 살자.

게임을 만들기 위해서는 국영수가 필수인가.

이 사고방식들에 대한 이론 또는 근거가 필요하다.
- 중요하지 않은 것은 상관 없지만, 중요한 것들은 효율성, 또는 정확성을 위해서 이론 또는 근거를 필요로 한다. 혼자 백날 생각하는 것 보다 논문 한편 읽는게 효율적이다. 

그림으로 이해한다. 이것은 기억하기 위한 필수 조건이다. 기억을 해야 응용하기 쉽다.
- 글로 기억한 것은 머리에 남지 안지만, 그림으로 기억한다면 이는 상당히 머리속에 오래 남는다. (지극히 당연한 이야기이다)
- 그림으로 그리기 어렵다면, 동사로라도 외우도록 하자.

분해하고 쪼갠다. 이것은 사용하기 위한 접근방식이다.
- 가장 단순한 selection sort를 생가하면 기준이 되는 피벗과 셀렉션을 분할 할 수 있다.
- 분해하고 쪼개기 위해서는 증명을 필요로 한다.

깊게 이해한다. 이것은 응용하기 위한 접근방식이다.
- 예를 들어 헤미스피어가 (사실 헤미스피어는 아니지만) 평면위의 한 점에 대한 레이의 축척이라는 점을 이용해서 빛의 반사 성질을 설명할 수 있다.
- 프레넬공식은 잘 모르지만, 들어오는 빛과 노말법선의 세타값이 커질 때 빛의 반사가 커진다. 이는 림라이트를 고려할 수 있다. 림라이트를 생각하면 NPBR과 PBR을 생각할 수 있는데, NPBR에서 흥미로운 것을 생각할 수 있다.

왜 펄어비스에서 못했을 까? 지금 생각해보면 할만 했었는데.
코드분석을 할줄 몰랐다.
- **사실 지금도 할줄 모른다. 하지만 코딩 규약을 따른 코드가 정말 읽기 쉽다는 사실은 알았다.**
- 읽기 쉬운 코드를 작성하는 것이 정말 중요하구나. KISS원칙이라고 하나. 추가적으로 간단하기 위해서는 정말 많이 알아야 한다. 다만 반복을 줄이기 위해서 사용한 코드가 어디에 있는지 아는게 조금 어렵다. 규칙이 있을 것 같은데 아직은 잘 모르겠다.
이상행동을 좀 많이 했다.
- 말할 때 생각하고 말하기.
    - 질문을 할 때는 상대방이 무슨 질문을
못하는 것을 할려했다.
- 개발자에게 처음해보는 그냥 처음 하는 사람과 다를게 없다.
- 개발자들은 자신의 커리어를 위해서 자신한테 필요한 것을 할려고 한다.
- 프로는 정체기를 얼마나 잘 견디냐 이다.
    - 나는 정체기를 안견딜려 했다.

게임 코드를 작성할 때는 IS a와 Has a관계, 상속에 대해서 생각해야 한다. 복잡하게 말하면 그렇고 게임 코드 작성 패턴은 오브젝트와 컴포넌트 패턴이다. 조립을 전제로 코드를 작성한다.

추가적으로 마왕 블로그 봤었는데 꽤 유명한 TA인가 보다. TA뭐시기에 나올정도면.
- 조회수 몇천 밖에 안되기는 하지만. 암튼

GlobalShader를 추가하기 위해 시도한 것들.
- 처음에 따라할려 했지만, 안됬다. 여기서 멘탄이 나갔다. 포럼, 사이트 등등 여러개를 찾았지만, 유용한 결론에 도달하지 못했다.
    - 버전을 생각하자. 버전이 다르니 코드도 많이 달랐다.
    - 이에 대해서 git변경이력을 보는 것이 도움이 될지도 모른다는 사실을 들었다.
        - 해당 파일에 대한 git변경이력을 보는법은 잘 모르겠다. 하지만 생각지도 못한 방법이다.
        - 추가적으로 GitHub 특정 메서드 찾기가 궁금하다. 그래야 해당 변경 이력을 쉽게 찾을 수 있지 않을까 생각한다.
    - 공식문서 씨이발, 버전이 바뀌었으면 업데이트 해줘야지잉. 안되는거 그대로 올려놨다.
        - 다르게 생각하면 현업에서 사용하는 사람한테는 별로 필요없다는 뜻이 되는 것인가?
- IT 개발 노트와 중국어로 된 사이트를 찾았다.
    - 댓글 보니 버전이 올라가면서 달라진 부분이 있었다.
        - 댓글도 꼼꼼하게 읽어야 된다는 사실을 알았다.
    - 버전이 다르니 달라진게 굉장히 많았다.
- 다른 분석 문서를 보았다.
    - 자동 한글번역 개판이다. 영어를 잘할 수 있으면 좋겠다.
- 가장 심플한 코드를 찾아 이해하였다. 사실 이게 제일 효율적인 것 같다. 다만 코드를 보고 이해하기 위해서는 해당 코드의 개념이 필요하다.
    - 개념은 공식문서, 분석문서를 한번 쭉 **정독**하는 것이 제일 효과적인 것 같다. 물론 전부 읽을라면 머리가 상당히 아프다.

쉐이더를 대하는 자세.
- 다필요 없고 쉐이더가 어떻게 작동하는지 쪼갤 수 있는 수식, 함수 단위로 쪼개서 이해하도록 하자. 그래야 자유롭게 응용 가능하다.

알고리즘을 대하는 자세.
- 쪼갤 수 있는 단위로 쪼개서 기억하고 싶은데, 생각보다 쉽지 않네잉?

조금더 학습속도를 빠르게 하는 방법.
- 일딴 아는게 많아야 한다.

> c++ : { rvo, nrvo }, { Call-by-value, Call-by-reference }, { translation unit }, { lambda and [lambda overhead](https://stackoverflow.com/questions/18619035/understanding-the-overhead-of-lambda-functions-in-c11) }, { call stack }

? GIT : Git 서브모듈을쓰는법과 어떻게 써야 효율적인지 모르겠네요.

? GITHUB : 배송 빌드에서 어떻게 자동으로 디버깅 할 수 있을까요??

? MARKDOWN : overflow가 텍스트가 넘어갔을 때 작동하는 것 같은데. 어떻게 사용하는지 모르겠네.

? Microsoft.MakeFile.target

? Implementing your character

? 매크로(각 UFUNCTION함수 위에 위치)는 엔진이 이러한 함수를 인식하도록 하여 직렬화 및 기타 엔진 기능에 포함될 수 있도록 합니다.

? PlayerInputComponent는 무엇인가요?

? 프로젝트에서 GameMode설정하지 않고, Level마다 Character bind하는 방법이 있나요?

? cpp로 메시 설정하는 방법

? visual studio 따움표와 화살표 include 차이.

? CastChecked는 무엇이고 왜 쓰는 건가요?

? Visual studio에서 인텔리센스를 끄면 어떤 결과를 가져오나요?

? PlayerController의 AddPitchInput을 하면 같이 움직이는 이유.

? bool값을 저장할 때 bool, uint8, uint32로 설정한 이유는 무엇인가?

? TObjectPtr???

? cook-time dependency tracking???

? TDelegate??

? TDelegate::TMethodPtr??

? UProperty의 category와 meta는 무엇인가?

? git ignore, attribute

? Net framework가 뭘까요? 어떻게 쓰는걸까요? 언리얼 엔진에는 어떻게 연결되어 있나요?

? https://sunduk.github.io/d01-build_dist_server/ 빌드 배포 자동화가 뭔가요....

? https://gamedevforever.com/137 컴파일러 경고를 대처하는 자세.

? 언리얼 엔진 자동 빌드하기.   

? Visual studio에서 정적분석도구 사용하고 싶어요. 코드 읽기 싫어요.

? 언리얼 엔진 커스터마이징과, intellisense속도를 높이기 위한 2022로 업데이트 방법. 

? 어떻게 하면 비쥬얼 스튜디오를 잘 쓸 수 있을까요. 기능이 너무 많아요.

? 언리얼에서 유튜브 재생시키기. 개인적으로 궁금함. 플러그인이 있기는 한데.
암튼. 이 기능을 추가한 후에. 동영상을 스크린샷으로 찍어서 텍스쳐에 업데이트 하는 방식도 궁금하기는 함.

? 언리얼에서 C#을 이용하는 방법. 

? CI/CD 배우기   
https://unrealcontainers.com/docs/use-cases/continuous-integration   
https://www.google.com/search?q=Unreal+Engine+CI/CD&sa=X&ved=2ahUKEwiRjruaxKf3AhUrqFYBHQ_jD28Q1QJ6BAgrEAE&biw=1920&bih=929&dpr=1    

? 서버 만들기   
https://ballbot.tistory.com/17

? HeadLess가 무엇인가요?   
https://slowburn.dev/blog/headless-fun-unreal-engine/   
https://github.com/EpicGames/UnrealEngine/commit/d0bff84f1390d7badd2280dff32cc8c5ba36809e   

? FABRIK : 구현 했다 오류가 있다. 부동소수점 오류 때문인가?
! Target으로 해야될 것을 TailPosition으로 했더니 오류가 있는 거였다. 당연히 작동되지 않았던 것이었다.
머리로 생각해서 작성하느니 그림으로 그리는게 훨씬 빠르겠다.

? FABRIK : IK문제에 대한 수치적 솔루션?? 야코비안 역 기법? 발견적 방법?

? FABRIK : 6개의 회전 관절에 대해서는 답이 있지만, 7개의 회전 관절에 대해서는 무한히 많고 분석 솔루션이 존재하지 않는다?

? 언리얼 엔진 인터페이스 사용법

? 코드 매트릭이 뭡니까? 복잡도라 하는 것 같은데요. 언리얼 프로젝트는 지원하지 않는다고 하네요.
? 코드 분석은 다음의 링크에서 확인합시다.
https://docs.microsoft.com/ko-kr/visualstudio/code-quality/?view=vs-2022

? 코드 정의창이 뭡니까?

? Visual studio 성능 프로파일링이 뭡니까?

? 언리얼 엔진 FeatureLevel이 뭡니까?

? Visual studio class diagram 보는법.

? Play PIE 모드란 무엇인가?

? 프로그래머에게 논리력이란 무엇인가?   
* 어떤 문제를 어떻게 접근해야 효율적일지 판단하는게 논리력인가?   
* 컴퓨터에게 자신의 생각을 구현하는 것이 논리력인가?   

? 언리얼 엔진의 스레드 들이 궁금합니다. 특히 비쥬얼 스튜디오의 스레드는 어떻게 쓰는 용도랍니까?

? Play In Editor (PIE)라고 하네요.