---
layout: post
title: Post
---


Recursive call(재귀 호출의 개념)   
재귀 호출은 알고리즘이나 자료 구조론에서는 매우 중요한 개념 중 하나입니다.
또한 재귀 호출을 사용하면 복잡한 문제도 매우 간단하게 논리적으로 접근하여 표현할 수 있습니다.   

# 재귀 호출의 개념 #
진짜 좋네....
http://www.tcpschool.com/c/c_function_recursive   

재귀 호출은 다양한 알고리즘을 표현한 의사 코드를 그대로 코드로 옮길 수 있게 해줍니다.
따라서 재귀 호출은 직관적인 프로그래밍을 하는데 많은 도움을 줍니다.   

스택 오버플로우(stack overflow)는 메모리 구조 중 스택(stack)영역에서
 해당 프로그램이 사용 할 수 있는 메모리 공간 이상을 사용하려고 할 때 발생합니다.

재귀 호출로 실행하는 것은 for문보다 느리기는 합니다.

-----------------------------------

나 알고리즘 못한다!. 근데 재미는 있다!... ㅠ.   
원하는 곳에 원하는 방식대로 문제를 해결하고 싶다.  

https://sudeky.tistory.com/156 

알고리즘에 따라 특정 상황에서 유리한, 또 다른 상황에서는 불리한 알고리즘이 있지만,
성능 이외에 알고리즘의 또 단른 특성 중 하나는 어떤 이해 및 구현의 난이도를 보이냐입니다.
보통 초기 구현과정에서는 가장(이해 구현이) 쉬운 알고리즘을 사용하며,
해당 알고리즘의 적용이 문제 해결의 correctness를 보장한다는 사실을 확인한 이후에
보다 어렵지만 나은 성능을 보이는 알고리즘으로 대체하는 것이 가능합니다. 

정렬은 컴퓨터 공학의 오래된 연구 분야이므로 이미 아주 훌륭한 정렬 관련 라이브러리가 존재합니다.

주요 관심사. 어떻게 이걸 생각해 낼 수 있었을까? 그리고 어디에 쓸 수 있을까?
