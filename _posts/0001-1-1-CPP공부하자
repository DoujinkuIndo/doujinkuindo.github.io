---
layout: post
title: Post
---


Recursive call(재귀 호출의 개념)   
재귀 호출은 알고리즘이나 자료 구조론에서는 매우 중요한 개념 중 하나입니다.
또한 재귀 호출을 사용하면 복잡한 문제도 매우 간단하게 논리적으로 접근하여 표현할 수 있습니다.   

# 재귀 호출의 개념 #
진짜 좋네....
http://www.tcpschool.com/c/c_function_recursive   

재귀 호출은 다양한 알고리즘을 표현한 의사 코드를 그대로 코드로 옮길 수 있게 해줍니다.
따라서 재귀 호출은 직관적인 프로그래밍을 하는데 많은 도움을 줍니다.   

스택 오버플로우(stack overflow)는 메모리 구조 중 스택(stack)영역에서
 해당 프로그램이 사용 할 수 있는 메모리 공간 이상을 사용하려고 할 때 발생합니다.

재귀 호출로 실행하는 것은 for문보다 느리기는 합니다.

버블 정렬 알고리즘(Bubble sort)   

서로 인접한 두 원소를 검사하여 순서에 맞지 않는 경우 위치를 바꾼다.   
시간복잡도 : O(n^2)

cf) e.g. ⇒ e.g. 는 라틴어 exempli gratia의 약자로, 
for example 혹은 for the sake of example을 의미

i.e. ⇒ i.e.는 라틴어 id est의 약자로, 
that is to say 혹은 in other words에 해당한다.

배열의 끝 값을 i라는 변수로 선언하여, 배열의 처음으로 루핑하게 된다.
내부 loop는 j라는 변수로 배열의 처음부터 시작해 i -1까지 루핑하게 된다.
만약 arr[j]가 arr[i+1]보다 크다면, 두 값을 swap한다.
정렬된 배열을 반환한다.

조건 1. 임의의 i번째 수는 i + 1째 수보다 작거나 같다.
i번째 수를 반환하는 함수를 f라 한다면 위의 조건에 따라서
f(i) <= f(i+1)
f(i+1) <= f(i+2) 이므로

조건 2. f(i) <= f(i+2)

