I"<h1 id="interface란">Interface란?</h1>

<p>인터페이스란 추상적인 개념으로 서로 관계없는 것들에 대한 시스템이나 장치를 작동시키기 위한 규제 또는 규약이라고 생각할 수 있습니다.</p>

<p>유사성이 없었는 크고 복잡한 클래스들에게 어떤 게임 함수나 기능을 공유하고자 하는 경우에 많이 쓰입니다.</p>

<p><strong>언리얼 엔진에서 잠재적으로 무관한 클래스 세트가 공통으 함수 세트를 구현할 수 있도록 하는 경우에 사용됩니다.</strong></p>

<p>예로 트리거 볼륨에 액터가 오버랩 되었을 때 액터의 구현된 인터페이스를 호출하도록 로직을 작성하면, 해당 인터페이스를 함정, 경보, 점수로 확장하기도, 부르기도, 구현을 나누기도 편해진다고 합니다.</p>

<h2 id="인터페이스-생성">인터페이스 생성</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 *
 */</span>
<span class="n">UINTERFACE</span><span class="p">(</span><span class="n">MinimalAPI</span><span class="p">,</span> <span class="n">Blueprintable</span><span class="p">)</span>
<span class="k">class</span> <span class="nc">UReactInterface</span> <span class="o">:</span> <span class="k">public</span> <span class="n">UInterface</span>
<span class="p">{</span>
	<span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="p">};</span>

<span class="k">class</span> <span class="nc">IReactInterface</span>
<span class="p">{</span>
	<span class="n">GENERATED_BODY</span><span class="p">()</span>

<span class="nl">public:</span>
	<span class="cm">/** Add interface function declarations here */</span>
<span class="p">};</span>
</code></pre></div></div>
<p>UINTERFACE 클래스는 실제 인터페이스가 아닙니다. 언리얼 엔진의 리플렉션 시스템에 보이도록 하기 위해서만 존재하는 클래스 입니다.</p>

<h2 id="인터페이스의-상속">인터페이스의 상속</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">AChildActor</span> <span class="o">:</span> <span class="k">public</span> <span class="n">AActor</span>
	<span class="p">,</span> <span class="k">public</span> <span class="n">IReactInterface</span>
</code></pre></div></div>

<p>I로 시작하는 인터페이스 클래스를 상속받아 구현합니다.</p>

<ul>
  <li>pure virtual(순수 가상함수)를 지원한다고 합니다.</li>
</ul>

<h2 id="인터페이스-함수의-호출">인터페이스 함수의 호출</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">if</span> <span class="p">(</span><span class="n">SkeletalMeshComponent</span><span class="o">-&gt;</span><span class="n">GetClass</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">ImplementsInterface</span><span class="p">(</span><span class="n">UReactToFeetOffInterface</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">()))</span>
	<span class="p">{</span>
		<span class="n">IReactToFeetOffInterface</span><span class="o">::</span><span class="n">Execute_SetBoneStrikePosition</span><span class="p">(</span><span class="n">SkeletalMeshComponent</span><span class="p">,</span> <span class="n">BoneName</span><span class="p">,</span> <span class="n">HitResult</span><span class="p">.</span><span class="n">Location</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span>
	<span class="p">}</span>
</code></pre></div></div>
<p>인터페이스의 메서드를 호출할 때는 Execute_를 사용해야 합니다.</p>

<h2 id="인터페이스를-이용한-블루프린트-직접-통신">인터페이스를 이용한 블루프린트 직접 통신</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">UPROPERTY</span><span class="p">(</span><span class="n">EditAnywhere</span><span class="p">,</span> <span class="n">BlueprintReadWrite</span><span class="p">)</span>
<span class="n">TScriptInterface</span><span class="o">&lt;</span><span class="n">IInterface</span><span class="o">&gt;</span> <span class="n">ChildActor</span><span class="p">;</span>
</code></pre></div></div>
<p>이를 통해 레벨에 있는 액터를 변수로 불러올 수 있습니다.</p>

<h2 id="인터페이스에-반환값을-입력할-떄">인터페이스에 반환값을 입력할 떄,</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">HORRORSYSTEM_API</span> <span class="n">IHorrorItemInterface</span>
<span class="p">{</span>
	<span class="n">GENERATED_BODY</span><span class="p">()</span>

<span class="nl">public:</span>
	<span class="k">virtual</span> <span class="n">AActor</span><span class="o">*</span> <span class="n">SpawnItemActor</span><span class="p">(</span><span class="n">AActor</span><span class="o">*</span> <span class="n">ContextObject</span><span class="p">,</span> <span class="k">const</span> <span class="n">FTransform</span><span class="o">&amp;</span> <span class="n">Transform</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bNoCollisionFail</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="n">AActor</span><span class="o">*</span> <span class="n">Owner</span> <span class="o">=</span> <span class="nb">nullptr</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>

<span class="nl">public:</span>
	<span class="k">virtual</span> <span class="k">const</span> <span class="n">FName</span><span class="o">&amp;</span> <span class="n">GetItemName</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">FName</span><span class="p">();</span> <span class="p">}</span>
	<span class="k">virtual</span> <span class="n">int32</span> <span class="n">GetItemMaxStack</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>

	<span class="c1">// 유효하면 아이템으로 스폰될 수 있고 그렇지 않으면 스폰될 수 없습니다</span>
	<span class="k">virtual</span> <span class="k">const</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">AActor</span><span class="o">&gt;&amp;</span> <span class="n">GetItemActorClass</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">AActor</span><span class="o">&gt;</span><span class="p">();</span> <span class="p">}</span>

	<span class="k">virtual</span> <span class="k">const</span> <span class="n">FIntSize2D</span><span class="o">&amp;</span> <span class="n">GetIconSize</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">FIntSize2D</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span> <span class="p">}</span>
	<span class="k">virtual</span> <span class="k">const</span> <span class="n">FSlateBrush</span><span class="o">&amp;</span> <span class="n">GetIconBrush</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">FSlateBrush</span><span class="p">();</span> <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p>다만 RVO되는지 안되는지 모르겠으니, 일딴 막고 나중에 찾아봅시다.</p>
:ET