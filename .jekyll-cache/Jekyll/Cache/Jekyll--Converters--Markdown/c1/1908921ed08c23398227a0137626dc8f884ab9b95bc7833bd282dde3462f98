I"1_<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />동적할당 실패시 오류처리 하는 이유가 뭘까?</li>
</ul>

<h2 id="폭팔">폭팔</h2>
<p>캐릭터 근처에서 무언가가 폭팔할 때 충격파가 치고 플레이어를 혼란스럽게 하는 것을 표현합니다.</p>

<p>흔들림은 거리에 따라 달라집니다.</p>

<p>Scale을 조절함으로서 폭팔의 크기를 조절할 수 있습니다.</p>

<h2 id="충격효과">충격효과</h2>
<p>캐릭터가 적이나 물체에 맞았을 때, 또는 캐릭터가 근접 무기로 적과 접촉했을 때 짧은 흔들림을 구현할 수 있습니다.</p>

<p>여러 상황에서 여러 변형과 함께 사용할 수 있스니다.</p>

<h2 id="캐릭터-모션">캐릭터 모션</h2>
<p>카메라 스윙을 구현하여, 만취 모션을 구현할 수 있습니다.</p>

<p>플레이어의 시야를 흐리게 하는 후처리 효과를 추가할 수 있습니다.</p>

<p>달리는 효과에서는 FOV를 변경하여 미묘한 높이 진동 외에 가속감을 줄 수 있습니다.</p>

<p>Head bobbing(흔들리는)효과를 추가해, Velocity가 변경될 때 카메라 흔들림을 추가할 수 있습니다.</p>

<h2 id="차량">차량</h2>
<p>레버가 변경될 떄 앞쏠림을 구현할 수 있습니다.</p>

<h2 id="환경">환경</h2>
<p>지진등의 자연에서 발생하는 효과를 구현 할 수 있습니다.
배에 타고있는 효과를 구현 할 수도 있습니다.
바람이 부는 효과도 구현 할 수 있습니다.</p>

<h2 id="camerashake">CameraShake</h2>

<p>Offset = Sin(DeletaTime * Frequency)
Frequency가 2PI일 때 한번 진동이 완료됨.</p>

<h1 id="camera-shake">Camera shake</h1>

<p><strong>카메라 흔들림 또는 화면 흔들림은 많은 비디오 게임에서 세계 또는 플레이어의 움직임 이벤트를 시뮬레이션하여 보다 사실적이거나 임팩트 있는 게임을 만드는 데 사용되는 기술입니다.</strong></p>

<p>먼저 카메라 쉐이크를 적용하는 함수는 보통 <strong>PlayController의 멤버 함수인 ClientPlayCameraShake와  UGameplayStatics의 전역 함수인 PlayWorldCameraShake가 있습니다.</strong></p>

<ul>
  <li>Client Play Camera Shake는 해당 플레이어의 카메라만을 흔들때 사용합니다.</li>
  <li>PlayWorldCameraShake는 월드의 흔들림을 표시하는 용도로 사용합니다.</li>
  <li><a href="https://www.parallelcube.com/2021/03/23/camera-shakes/">여기서 Camera shake의 튜토리얼을 볼 수 있습니다.</a></li>
  <li><a href="https://uehow.web.fc2.com/Contents/Eng/UE4/BluePrint/NodeReference_Game/PlayWorldCameraShake.html">ueHow의 Play World Camera Shake를 볼 수 있습니다.</a></li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">GetWorld</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">GetFirstPlayerController</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">ClientPlayCameraShake</span><span class="p">(</span><span class="n">CS_shake</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">UGameplayStatics</span><span class="o">::</span><span class="n">PlayWorldCameraShake</span><span class="p">(</span><span class="n">GetWorld</span><span class="p">(),</span> <span class="n">CS_shake</span><span class="p">,</span> <span class="n">GetActorLocation</span><span class="p">(),</span> <span class="p">...);</span>
</code></pre></div></div>

<h2 id="카메라-쉐이크-옵션-기능">카메라 쉐이크 옵션 기능</h2>
<ul>
  <li>Single Instance는 카메라 쉐이크를 여러번 재생했을 때, 한번 진동이 되게끔 하는 설정입니다.</li>
  <li>Oscillation Duration은 진동 지속 시간 / 초 단위입니다.
    <ul>
      <li>음수이면 무한대로 재생됩니다.</li>
    </ul>
  </li>
  <li>Oscillation Blend in Time은 블렌드 인 지속 시간으로 카메라 쉐이크 발동시 점점 강해지는 시간입니다.</li>
  <li>
    <p>Oscillation Blend Out Time은 블렌드 아웃 지속 시간으로 카메라 쉐이크 발동시 점점 약해지는 시간입니다.</p>
  </li>
  <li>Rot Oscillation은 카메라 회전 쉐이크입니다.</li>
  <li>Loc Oscillation은 카메라 위치 쉐이크입니다.</li>
  <li>FOV Oscillation은 카메라 화각 쉐이크입니다.</li>
  <li>
    <p>Anim Shake는 카메라 애님 쉐이크로 그래프를 통한 직접적인 카메라 흔들기입니다.</p>
  </li>
  <li>Amplitude는 카메라 쉐이킹 강도를 나타냅니다.</li>
  <li>Frequency는 카메라 쉐이킹 속도를 나타냅니다.</li>
  <li>Initial Offset은 카메라 초기 오프셋을 나타냅니다.</li>
</ul>

<p>카메라 쉐이크를 C++클래스로 관리할 수도, Blueprint로 관리할 수도 있습니다. 이는 편의에 따른 선택입니다.</p>

<h2 id="코드">코드</h2>

<pre><code class="language-mermaid">graphLR
APlayerController::ClientStartCameraShake---&gt;PlayerCameraManager::StartCameraShake

PlayerCameraManager::StartCameraShake---&gt;CachedCameraShakeMod::AddCameraShake

CachedCameraShakeMod::AddCameraShake---&gt;
</code></pre>

<p>ClientStartCameraShake에 대해</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="cm">/** 
	 * Play Camera Shake 
	 * @param Shake - Camera shake animation to play
	 * @param Scale - Scalar defining how "intense" to play the anim
	 * @param PlaySpace - Which coordinate system to play the shake in (used for CameraAnims within the shake).
	 * @param UserPlaySpaceRot - Matrix used when PlaySpace = CAPS_UserDefined
	 */</span>
	<span class="n">UFUNCTION</span><span class="p">(</span><span class="n">unreliable</span><span class="p">,</span> <span class="n">client</span><span class="p">,</span> <span class="n">BlueprintCallable</span><span class="p">,</span> <span class="n">Category</span><span class="o">=</span><span class="s">"Game|Feedback"</span><span class="p">)</span>
	<span class="kt">void</span> <span class="nf">ClientStartCameraShake</span><span class="p">(</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">UCameraShakeBase</span><span class="o">&gt;</span> <span class="n">Shake</span><span class="p">,</span> <span class="kt">float</span> <span class="n">Scale</span> <span class="o">=</span> <span class="mf">1.</span><span class="n">f</span><span class="p">,</span> <span class="n">ECameraShakePlaySpace</span> <span class="n">PlaySpace</span> <span class="o">=</span> <span class="n">ECameraShakePlaySpace</span><span class="o">::</span><span class="n">CameraLocal</span><span class="p">,</span> <span class="n">FRotator</span> <span class="n">UserPlaySpaceRot</span> <span class="o">=</span> <span class="n">FRotator</span><span class="o">::</span><span class="n">ZeroRotator</span><span class="p">);</span>
</code></pre></div></div>
<p>PlayerCameraManager의 StartCameraShake를 호출함</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="n">APlayerController</span><span class="o">::</span><span class="n">ClientStartCameraShake_Implementation</span><span class="p">(</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">UCameraShakeBase</span><span class="o">&gt;</span> <span class="n">Shake</span><span class="p">,</span> <span class="kt">float</span> <span class="n">Scale</span><span class="p">,</span> <span class="n">ECameraShakePlaySpace</span> <span class="n">PlaySpace</span><span class="p">,</span> <span class="n">FRotator</span> <span class="n">UserPlaySpaceRot</span> <span class="p">)</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">PlayerCameraManager</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">PlayerCameraManager</span><span class="o">-&gt;</span><span class="n">StartCameraShake</span><span class="p">(</span><span class="n">Shake</span><span class="p">,</span> <span class="n">Scale</span><span class="p">,</span> <span class="n">PlaySpace</span><span class="p">,</span> <span class="n">UserPlaySpaceRot</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>CachedCameraShakeMod의 AddCameraShake를 호출함</p>
<ul>
  <li>CachedCameraShakeMod는 PostInitializeComponents에서 생성됨.
    <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">UCameraShakeBase</span><span class="o">*</span> <span class="n">APlayerCameraManager</span><span class="o">::</span><span class="n">StartCameraShake</span><span class="p">(</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UCameraShakeBase</span><span class="o">&gt;</span> <span class="n">ShakeClass</span><span class="p">,</span> <span class="kt">float</span> <span class="n">Scale</span><span class="p">,</span> <span class="n">ECameraShakePlaySpace</span> <span class="n">PlaySpace</span><span class="p">,</span> <span class="n">FRotator</span> <span class="n">UserPlaySpaceRot</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">ShakeClass</span> <span class="o">&amp;&amp;</span> <span class="n">CachedCameraShakeMod</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">Scale</span> <span class="o">&gt;</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">)</span> <span class="p">)</span>
  <span class="p">{</span>
      <span class="k">return</span> <span class="n">CachedCameraShakeMod</span><span class="o">-&gt;</span><span class="n">AddCameraShake</span><span class="p">(</span><span class="n">ShakeClass</span><span class="p">,</span> <span class="n">FAddCameraShakeParams</span><span class="p">(</span><span class="n">Scale</span><span class="p">,</span> <span class="n">PlaySpace</span><span class="p">,</span> <span class="n">UserPlaySpaceRot</span><span class="p">));</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nb">nullptr</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>ShakeClass가 유효하다면</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">UCameraShakeBase</span><span class="o">*</span> <span class="n">UCameraModifier_CameraShake</span><span class="o">::</span><span class="n">AddCameraShake</span><span class="p">(</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UCameraShakeBase</span><span class="o">&gt;</span> <span class="n">ShakeClass</span><span class="p">,</span> <span class="k">const</span> <span class="n">FAddCameraShakeParams</span><span class="o">&amp;</span> <span class="n">Params</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">SCOPE_CYCLE_COUNTER</span><span class="p">(</span><span class="n">STAT_AddCameraShake</span><span class="p">);</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">ShakeClass</span> <span class="o">!=</span> <span class="nb">nullptr</span><span class="p">)</span>
	<span class="p">{</span>
</code></pre></div></div>

<p>파라메터 설정 후</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>		<span class="kt">float</span> <span class="n">Scale</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">Scale</span><span class="p">;</span>
		<span class="k">const</span> <span class="n">UCameraShakeSourceComponent</span><span class="o">*</span> <span class="n">SourceComponent</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">SourceComponent</span><span class="p">;</span>
		<span class="k">const</span> <span class="kt">bool</span> <span class="n">bIsCustomInitialized</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">Initializer</span><span class="p">.</span><span class="n">IsBound</span><span class="p">();</span>

		<span class="c1">// Adjust for splitscreen</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">CameraOwner</span> <span class="o">!=</span> <span class="nb">nullptr</span> <span class="o">&amp;&amp;</span> <span class="n">GEngine</span><span class="o">-&gt;</span><span class="n">IsSplitScreen</span><span class="p">(</span><span class="n">CameraOwner</span><span class="o">-&gt;</span><span class="n">GetWorld</span><span class="p">()))</span>
		<span class="p">{</span>
			<span class="n">Scale</span> <span class="o">*=</span> <span class="n">SplitScreenShakeScale</span><span class="p">;</span>
		<span class="p">}</span>
</code></pre></div></div>

<p>기본 인스턴스를 가져온 후, 싱글 인스턴스면 다음을 수행함. 이 때 이미있으면, 재시작하고 종료함. 없으면 만들어야함.</p>

<ul>
  <li>UCameraShakeBase에 bSingleInstance가 정의되어 있음.
    <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      <span class="n">UCameraShakeBase</span> <span class="k">const</span><span class="o">*</span> <span class="k">const</span> <span class="n">ShakeCDO</span> <span class="o">=</span> <span class="n">GetDefault</span><span class="o">&lt;</span><span class="n">UCameraShakeBase</span><span class="o">&gt;</span><span class="p">(</span><span class="n">ShakeClass</span><span class="p">);</span>
      <span class="k">const</span> <span class="kt">bool</span> <span class="n">bIsSingleInstance</span> <span class="o">=</span> <span class="n">ShakeCDO</span> <span class="o">&amp;&amp;</span> <span class="n">ShakeCDO</span><span class="o">-&gt;</span><span class="n">bSingleInstance</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">bIsSingleInstance</span><span class="p">)</span>
      <span class="p">{</span>
          <span class="c1">// Look for existing instance of same class</span>
          <span class="k">for</span> <span class="p">(</span><span class="n">FActiveCameraShakeInfo</span><span class="o">&amp;</span> <span class="n">ShakeInfo</span> <span class="o">:</span> <span class="n">ActiveShakes</span><span class="p">)</span>
          <span class="p">{</span>
              <span class="n">UCameraShakeBase</span><span class="o">*</span> <span class="n">ShakeInst</span> <span class="o">=</span> <span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeInstance</span><span class="p">;</span>
              <span class="k">if</span> <span class="p">(</span><span class="n">ShakeInst</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">ShakeClass</span> <span class="o">==</span> <span class="n">ShakeInst</span><span class="o">-&gt;</span><span class="n">GetClass</span><span class="p">()))</span>
              <span class="p">{</span>
                  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ShakeInfo</span><span class="p">.</span><span class="n">bIsCustomInitialized</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">bIsCustomInitialized</span><span class="p">)</span>
                  <span class="p">{</span>
                      <span class="c1">// Just restart the existing shake, possibly at the new location.</span>
                      <span class="c1">// Warning: if the shake source changes, this would "teleport" the shake, which might create a visual</span>
                      <span class="c1">// artifact, if the user didn't intend to do this.</span>
                      <span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeSource</span> <span class="o">=</span> <span class="n">SourceComponent</span><span class="p">;</span>
                      <span class="n">ShakeInst</span><span class="o">-&gt;</span><span class="n">StartShake</span><span class="p">(</span><span class="n">CameraOwner</span><span class="p">,</span> <span class="n">Scale</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">PlaySpace</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">UserPlaySpaceRot</span><span class="p">);</span>
                      <span class="k">return</span> <span class="n">ShakeInst</span><span class="p">;</span>
                  <span class="p">}</span>
                  <span class="k">else</span>
                  <span class="p">{</span>
                      <span class="c1">// If either the old or new shake are custom initialized, we can't</span>
                      <span class="c1">// reliably restart the existing shake and expect it to be the same as what the caller wants. </span>
                      <span class="c1">// So we forcibly stop the existing shake immediately and will create a brand new one.</span>
                      <span class="n">ShakeInst</span><span class="o">-&gt;</span><span class="n">StopShake</span><span class="p">(</span><span class="nb">true</span><span class="p">);</span>
                      <span class="c1">// Discard it right away so the spot is free in the active shakes array.</span>
                      <span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeInstance</span> <span class="o">=</span> <span class="nb">nullptr</span><span class="p">;</span>
                  <span class="p">}</span>
              <span class="p">}</span>
          <span class="p">}</span>
      <span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>새로운 인스턴스를 생성함</strong></p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>		<span class="c1">// Try to find a shake in the expired pool</span>
		<span class="n">UCameraShakeBase</span><span class="o">*</span> <span class="n">NewInst</span> <span class="o">=</span> <span class="n">ReclaimShakeFromExpiredPool</span><span class="p">(</span><span class="n">ShakeClass</span><span class="p">);</span>

		<span class="c1">// No old shakes, create a new one</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">NewInst</span> <span class="o">==</span> <span class="nb">nullptr</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">NewInst</span> <span class="o">=</span> <span class="n">NewObject</span><span class="o">&lt;</span><span class="n">UCameraShakeBase</span><span class="o">&gt;</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">ShakeClass</span><span class="p">);</span>
		<span class="p">}</span>
</code></pre></div></div>

<p>제대로 생성했다면, 실행시키고 반환함.</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>		<span class="k">if</span> <span class="p">(</span><span class="n">NewInst</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="c1">// Custom initialization if necessary.</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">bIsCustomInitialized</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">Params</span><span class="p">.</span><span class="n">Initializer</span><span class="p">.</span><span class="n">Execute</span><span class="p">(</span><span class="n">NewInst</span><span class="p">);</span>
			<span class="p">}</span>

			<span class="c1">// Initialize new shake and add it to the list of active shakes</span>
			<span class="n">NewInst</span><span class="o">-&gt;</span><span class="n">StartShake</span><span class="p">(</span><span class="n">CameraOwner</span><span class="p">,</span> <span class="n">Scale</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">PlaySpace</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">UserPlaySpaceRot</span><span class="p">);</span>

			<span class="c1">// Look for nulls in the array to replace first -- keeps the array compact</span>
			<span class="kt">bool</span> <span class="n">bReplacedNull</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
			<span class="k">for</span> <span class="p">(</span><span class="n">int32</span> <span class="n">Idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">Idx</span> <span class="o">&lt;</span> <span class="n">ActiveShakes</span><span class="p">.</span><span class="n">Num</span><span class="p">();</span> <span class="o">++</span><span class="n">Idx</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">FActiveCameraShakeInfo</span><span class="o">&amp;</span> <span class="n">ShakeInfo</span> <span class="o">=</span> <span class="n">ActiveShakes</span><span class="p">[</span><span class="n">Idx</span><span class="p">];</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeInstance</span> <span class="o">==</span> <span class="nb">nullptr</span><span class="p">)</span>
				<span class="p">{</span>
					<span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeInstance</span> <span class="o">=</span> <span class="n">NewInst</span><span class="p">;</span>
					<span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeSource</span> <span class="o">=</span> <span class="n">SourceComponent</span><span class="p">;</span>
					<span class="n">ShakeInfo</span><span class="p">.</span><span class="n">bIsCustomInitialized</span> <span class="o">=</span> <span class="n">bIsCustomInitialized</span><span class="p">;</span>
					<span class="n">bReplacedNull</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>

			<span class="c1">// no holes, extend the array</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">bReplacedNull</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">FActiveCameraShakeInfo</span> <span class="n">ShakeInfo</span><span class="p">;</span>
				<span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeInstance</span> <span class="o">=</span> <span class="n">NewInst</span><span class="p">;</span>
				<span class="n">ShakeInfo</span><span class="p">.</span><span class="n">ShakeSource</span> <span class="o">=</span> <span class="n">SourceComponent</span><span class="p">;</span>
				<span class="n">ShakeInfo</span><span class="p">.</span><span class="n">bIsCustomInitialized</span> <span class="o">=</span> <span class="n">bIsCustomInitialized</span><span class="p">;</span>
				<span class="n">ActiveShakes</span><span class="p">.</span><span class="n">Emplace</span><span class="p">(</span><span class="n">ShakeInfo</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="p">}</span>

		<span class="k">return</span> <span class="n">NewInst</span><span class="p">;</span>
	<span class="p">}</span>
</code></pre></div></div>
<p>모든 실패시 기본 반환값은 nullptr임.</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">return</span> <span class="nb">nullptr</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>주요 참고자료 : <a href="https://www.parallelcube.com/2021/03/23/camera-shakes/">Camera shakes</a></p>
:ET