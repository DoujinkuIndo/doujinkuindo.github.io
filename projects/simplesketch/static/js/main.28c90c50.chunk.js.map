{"version":3,"sources":["diagram.js","Tools.js","Colors.js","ItemConfiguration.js","elements.js","App.js","serviceWorker.js","index.js"],"names":["useDiagramEvents","mousePos","setMousePos","tool","color","diagram","setDiagram","setCreatingDiagram","onElementClick","useEffect","containerElement","document","getElementsByClassName","onmousedown","e","target","xStart","offsetX","yStart","offsetY","onmousemove","element","id","uuid","type","x","y","height","Math","abs","width","backgroundColor","onmouseup","className","concat","Object","toConsumableArray","Tools","_ref","setTool","react_default","a","createElement","style","position","top","left","display","flexDirection","onClick","border","marginTop","Colors","setColor","alignItems","value","onChange","ItemConfiguration","selectedItem","updateSelectedItem","deleteElement","zIndex","padding","borderStyle","borderWidth","borderColor","i","objectSpread","parseInt","Square","item","_useState","useState","_useState2","slicedToArray","strokeWidth","selected","stroke","fill","Circle","_ref2","r","cx","cy","Line","_ref3","x1","x2","y1","y2","App","_useState3","_useState4","_useDiagram","localDiagram","JSON","parse","localStorage","getItem","newDiagram","setItem","stringify","useDiagram","_useDiagram2","_useState5","_useState6","creatingDiagram","_useState7","_useState8","map","find","emptyFn","key","renderCreatingObject","update","filter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28c90c50.chunk.js","sourcesContent":["import uuid from 'uuid/v4'\nimport { useEffect, useState } from 'react'\n\nexport const useDiagramEvents = (mousePos, setMousePos, tool, color, diagram, setDiagram, setCreatingDiagram, onElementClick) => {\n  useEffect(() => {\n    var containerElement = document.getElementsByClassName('diagram')[0];\n    var mouseEnterSub = containerElement.onmousedown = function(e) {\n      if (e.target != containerElement) {\n        return\n      }\n\n      setMousePos({\n        xStart: e.offsetX,\n        yStart: e.offsetY\n      })\n    }\n    \n    var mouseMoveSub = containerElement.onmousemove = function(e) {\n      if (!mousePos) {\n        return\n      }\n      var element = {\n        id: uuid(),\n        type: tool,\n        x: mousePos.xStart,\n        y: mousePos.yStart,\n        height: Math.abs(e.offsetY - mousePos.yStart),\n        width: Math.abs(e.offsetX - mousePos.xStart),\n        backgroundColor: color\n      }\n\n      setCreatingDiagram(element)\n    }\n\n    var mouseLeaveSub = containerElement.onmouseup = function(e) {\n      if (e.target.className == 'diagram') {\n        onElementClick(null)\n      }\n\n      if (!mousePos || (Math.abs(e.offsetX - mousePos.xStart) < 50 && Math.abs(e.offsetY - mousePos.yStart < 50))) {\n        return\n      }\n\n      const element = {\n        id: uuid(),\n        type: tool,\n        x: mousePos.xStart,\n        y: mousePos.yStart,\n        height: Math.abs(e.offsetY - mousePos.yStart),\n        width: Math.abs(e.offsetX - mousePos.xStart),\n        backgroundColor: color\n      };\n\n      setDiagram([\n        ...diagram,\n        element\n      ])\n      setCreatingDiagram(null)\n      setMousePos(null)\n    }\n\n    return () => {\n      mouseEnterSub = null;\n      mouseMoveSub = null;\n      mouseLeaveSub = null;\n    }\n  })\n}\n\nexport function useDiagram() {\n  var localDiagram = JSON.parse(localStorage.getItem('diagram'));\n  const [diagram, setDiagram] = useState(localDiagram ? localDiagram : []);\n\n  const setDiagramAndSave = newDiagram => {\n    setDiagram(newDiagram)\n    localStorage.setItem('diagram', JSON.stringify(newDiagram))\n  };\n\n  return [diagram, setDiagramAndSave]\n}","import React from 'react'\n\nexport function Tools({tool, setTool}) {\n  return (\n    <div style={{\n      position: 'absolute',\n      top: 100,\n      left: 30,\n      width: 50,\n      display: 'flex',\n      flexDirection: 'column',\n    }}>\n      <span>Elements</span>\n      <button\n        onClick={() => setTool('line')}\n        style={{\n          border: '1px solid black',\n          backgroundColor: tool == 'line' ? 'lightgray' : 'white',\n          width: 50,\n          height: 30,\n        }}>\n        Line\n      </button>\n      <button\n        onClick={() => setTool('square')}\n        style={{\n          border: '1px solid black',\n          backgroundColor: tool == 'square' ? 'lightgray' : 'white',\n          marginTop: 10,\n          width: 50,\n          height: 30,\n        }}>\n        Square\n      </button>\n      <button\n        onClick={() => setTool('circle')}\n        style={{\n          border: '1px solid black',\n          backgroundColor: tool == 'circle' ? 'lightgray' : 'white',\n          marginTop: 10,\n          width: 50,\n          height: 30,\n        }}>\n        Circle\n      </button>\n    </div>\n  )\n}","import React from 'react'\n\nexport function Colors({color, setColor}) {\n  return (\n    <div style={{\n      position: 'absolute',\n      top: 250,\n      left: 30,\n      width: 50,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }}>\n      <span>Colors</span>\n      <input type='color'\n        value={color}\n        onChange={(e) => setColor(e.target.value)}\n        style={{\n          width: 30,\n          height: 30,\n        }} />\n    </div>\n  )\n}","import React from 'react'\n\nexport function ItemConfiguration({selectedItem, updateSelectedItem, deleteElement}) {\n  if (!selectedItem) {\n    return null\n  }\n\n  return (\n    <div style={{\n      zIndex: 999,\n      backgroundColor: '#ffffff',\n      position: 'absolute',\n      top: selectedItem.y,\n      left: selectedItem.x + selectedItem.width + 20,\n      width: 150,\n      padding: 10,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      borderStyle: 'solid',\n      borderWidth: 2,\n      borderColor: '#000000'\n    }}>\n      <button onClick={() => deleteElement(selectedItem.id)}>Delete</button>\n      <label>Height</label>\n      <input value={selectedItem.height}\n        type='number'\n        onChange={(e) => updateSelectedItem(i => ({...i, height: parseInt(e.target.value)}))} />\n      <label>Width</label>\n      <input value={selectedItem.width}\n        type='number'\n        onChange={(e) => updateSelectedItem(i => ({...i, width: parseInt(e.target.value)}))} />\n    </div>\n  )\n}","import React, { useState } from 'react'\n\nexport function Square({item, onElementClick}) {\n  const [moving, setMoving] = useState(null)\n  return (\n    <rect onClick={() => onElementClick(item.id)}\n      className={'diagram-element'}\n      height={item.height}\n      width={item.width}\n      strokeWidth={item.selected ? 3 : 0}\n      stroke={'#ccc'}\n      fill={item.backgroundColor}\n      x={item.selected ? item.x - 3 : item.x}\n      y={item.selected ? item.y - 3 : item.y} />\n  )\n}\n\nexport function Circle({item, onElementClick}) {\n  return (\n    <circle onClick={() => onElementClick(item.id)}\n      className={'diagram-element'}\n      strokeWidth={item.selected ? 3 : 0}\n      stroke={'#ccc'}\n      r={item.height}\n      fill={item.backgroundColor}\n      cx={item.selected ? item.x - 3 : item.x}\n      cy={item.selected ? item.y - 3 : item.y} />\n  )\n}\n\nexport function Line({item, onElementClick}) {\n  return (\n    <line onClick={() => onElementClick(item.id)}\n      className={'diagram-element'}\n      x1={item.selected ? item.x - 3 : item.x}\n      x2={item.x + item.width}\n      y1={item.selected ? item.y - 3 : item.y}\n      y2={item.y + item.height}\n      strokeWidth={item.selected ? 6 : 3}\n      stroke={item.backgroundColor} />\n  )\n}","import React, {useEffect, useState} from 'react';\nimport uuid from 'uuid/v4';\nimport './App.css';\nimport { useDiagramEvents, useDiagram } from './diagram';\nimport { Tools } from './Tools';\nimport { Colors } from './Colors';\nimport { ItemConfiguration } from './ItemConfiguration';\nimport { Line, Circle, Square } from './elements';\n\nfunction App() {\n  const [tool, setTool] = useState('square');\n  const [color, setColor] = useState('#000000');\n  const [diagram, setDiagram] = useDiagram();\n  const [creatingDiagram, setCreatingDiagram] = useState(null);\n  const [mousePos, setMousePos] = useState(null);\n  \n  const onElementClick = (id) => setDiagram(diagram.map(i => ({\n    ...i,\n    selected: i.id == id\n  })))\n\n  useDiagramEvents(mousePos, setMousePos, tool, color, diagram, setDiagram, setCreatingDiagram, onElementClick)\n  \n\n  const selectedItem = diagram.find(i => i.selected)\n\n  const updateSelectedItem = (update) => setDiagram(diagram.map(i => {\n    if (i.id == selectedItem.id) {\n      return update(i)\n    }\n\n    return i\n  }))\n\n  const deleteElement = id => setDiagram(diagram.filter(i => i.id != id))\n\n  return (\n    <div className='container'>\n      <h1>Simple Sketch</h1>\n\n      <Tools tool={tool} setTool={setTool} />\n      <Colors color={color} setColor={setColor} />\n      <div className='diagram-container'>\n        <svg className='diagram'>\n          {renderCreatingObject(creatingDiagram)}\n          {diagram.map(item => {\n            switch (item.type) {\n              case 'square':\n                return <Square key={item.id} item={item} onElementClick={onElementClick} />\n              case 'circle':\n                  return <Circle key={item.id} item={item} onElementClick={onElementClick} />\n              case 'line':\n                  return <Line key={item.id} item={item} onElementClick={onElementClick} />\n            }\n          })}\n        </svg>\n        <ItemConfiguration selectedItem={selectedItem} updateSelectedItem={updateSelectedItem} deleteElement={deleteElement} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderCreatingObject(item) {\n  if (!item) {\n    return\n  }\n\n  const emptyFn = () => {}\n\n  switch (item.type) {\n    case 'square':\n      return <Square key={item.id} item={item} onElementClick={emptyFn} />\n    case 'circle':\n      return <Circle key={item.id} item={item} onElementClick={emptyFn} />\n    case 'line':\n      return <Line key={item.id} item={item} onElementClick={emptyFn} />\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}